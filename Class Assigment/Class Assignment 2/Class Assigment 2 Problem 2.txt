class crazyDie:
	def __init__(self,L):
		self.sides = L
		self.current = len(L) - 1
		
	def __str__(self):
		C = str(self.sides[self.current])
		return "DIE: " + C
		
	def getValue(self):
		return self.sides[self.current]
		
	def fakeRoll(self):
		self.current = self.current + 1
		if self.current == len(self.sides):
			self.current = 0
			
	def grow(self, a):
		self.sides.append(a)

D = crazyDie([2,3,1,1,4,7]) #sets self.sides to [2,3,1,1,4,7] and self.current to 5
print("Value one:", D.getValue()) #prints "Value one: 7"

D.grow(20) #adds 20 to the self.sides [2,3,1,1,4,7,20]
D.fakeRoll() #adds 1 to self.current making it 6
print("Value two:", D.getValue()) #prints "Value two: 20"

D.fakeRoll()	# adds 1 to self.current making it 7, but since 7 equals the lenght of 
				  self.sides, self.current becomes 0
			
print("Value three:", D.getValue()) #prints "Value three: 2"

D.fakeRoll()	# adds 1 to self.current making it 1
print(D) # remember: this calls __str__ #prints "DIE: 3"